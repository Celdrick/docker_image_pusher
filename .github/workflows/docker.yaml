name: Docker
on:
  workflow_dispatch:
  push:
    branches: [ main ]
env:
  ALIYUN_REGISTRY: "${{ secrets.ALIYUN_REGISTRY }}"
  ALIYUN_NAME_SPACE: "${{ secrets.ALIYUN_NAME_SPACE }}"
  ALIYUN_REGISTRY_USER: "${{ secrets.ALIYUN_REGISTRY_USER }}"
  ALIYUN_REGISTRY_PASSWORD: "${{ secrets.ALIYUN_REGISTRY_PASSWORD }}"
  MY_REGISTRY: "${{ secrets.MY_REGISTRY }}"
  MY_REGISTRY_USER: "${{ secrets.MY_REGISTRY_USER }}"
  MY_REGISTRY_PASSWORD: "${{ secrets.MY_REGISTRY_PASSWORD }}"
  MYSQL_HOST: "10.0.0.130"
  MYSQL_PORT: "3306"
  MYSQL_DB: "${{ secrets.MYSQL_DB }}"
  MYSQL_USER: "${{ secrets.MYSQL_USER }}"
  MYSQL_PASSWORD: "${{ secrets.MYSQL_PASSWORD }}"
  SSH_HOST: "${{ secrets.SSH_HOST }}"
  SSH_USER: "${{ secrets.SSH_USER }}"
  SSH_PRIVATE_KEY: "${{ secrets.SSH_PRIVATE_KEY }}"
  SSH_PASSPHRASE: "${{ secrets.SSH_PASSPHRASE }}"

jobs:
  build:
    name: Pull and Push
    runs-on: ubuntu-latest
    steps:
    - name: Configure Docker insecure registry
      run: |
        echo '{"insecure-registries": ["${{ env.MY_REGISTRY }}"]}' | sudo tee /etc/docker/daemon.json
        sudo systemctl daemon-reload
        sudo systemctl restart docker

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 2048
        swap-size-mb: 128
        remove-dotnet: 'true'
        remove-haskell: 'true'
        build-mount-path: '/var/lib/docker/'

    - name: Setup SSH Tunnel
      id: ssh_tunnel
      run: |
        # 安装sshpass
        sudo apt-get install -y sshpass
        
        # 创建SSH目录并设置权限
        mkdir -p ~/.ssh
        echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        cat ~/.ssh/id_rsa
        
        # 建立SSH隧道（后台运行）
        sshpass -p "${SSH_PASSPHRASE}" ssh -f -N \
          -L 3307:${MYSQL_HOST}:${MYSQL_PORT} \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -o ServerAliveInterval=60 \
          -o ServerAliveCountMax=3 \
          ${SSH_USER}@${SSH_HOST} -p 22
        
        # 验证SSH进程是否存在
        pgrep -f "ssh -f -N" || echo "SSH tunnel failed to start"

    - name: Install MySQL client
      run: sudo apt-get install -y mysql-client

    - name: Initialize database
      run: |
        mysql --host=127.0.0.1 --port=3307 \
          --user=${MYSQL_USER} --password=${MYSQL_PASSWORD} <<EOF
        CREATE DATABASE IF NOT EXISTS ${MYSQL_DB};
        USE ${MYSQL_DB};
        CREATE TABLE IF NOT EXISTS push_history (
          id INT AUTO_INCREMENT PRIMARY KEY,
          registry_url VARCHAR(255) NOT NULL,
          registry_image_name VARCHAR(255) NOT NULL,
          image_name VARCHAR(255) NOT NULL,
          push_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        EOF

    # 保留原有镜像处理步骤...

    - name: Close SSH Tunnel
      if: always()
      run: |
        pgrep -f "ssh -f -N" | xargs -r kill
        rm -rf ~/.ssh
